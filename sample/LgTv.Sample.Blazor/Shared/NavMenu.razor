@implements IDisposable
@inject IClientController Controller

<MudNavMenu>
    @if (!Controller.IsConnected)
    {
        <MudNavLink Href="connection" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Link">Connect</MudNavLink>
    }
    else
    {
        <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
        <MudNavLink Href="power" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.PowerSettingsNew">Power</MudNavLink>
        <MudNavLink Href="audio" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.VolumeUp">Audio</MudNavLink>
        <MudNavLink Href="playback" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.PlayArrow">Playback</MudNavLink>
        <MudNavLink Href="keyboard" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Keyboard">Keyboard</MudNavLink>
        <MudNavLink Href="dpad" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Gamepad">D-Pad</MudNavLink>
        <MudNavLink Href="apps" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Apps">Apps</MudNavLink>
        <MudNavLink Href="channels" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Channels</MudNavLink>
        <MudNavLink Href="inputs" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Cable">Inputs</MudNavLink>
        <MudNavLink Href="notifications" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Notifications">Notifications</MudNavLink>
        <MudNavLink Href="services" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MiscellaneousServices">Services</MudNavLink>
        <MudNavLink Href="info" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Info">Info</MudNavLink>

        <MudNavLink Href="developer" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Terminal">Developer</MudNavLink>

        <MudNavLink Href="connection" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.LinkOff">Disconnect</MudNavLink>
    }
</MudNavMenu>

@code {
    protected override void OnInitialized()
    {
        Controller.Connected += ControllerOnConnected;
        Controller.Disconnected += ControllerOnDisconnected;
    }

    public void Dispose()
    {
        Controller.Connected -= ControllerOnConnected;
        Controller.Disconnected -= ControllerOnDisconnected;
    }

    private void ControllerOnDisconnected(object sender, EventArgs e)
    {
        StateHasChanged();
    }

    private void ControllerOnConnected(object sender, EventArgs e)
    {
        StateHasChanged();
    }
}
