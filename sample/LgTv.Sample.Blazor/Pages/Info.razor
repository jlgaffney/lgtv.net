@page "/info"
@inject ILgTvClientController Controller

<PageTitle>Info</PageTitle>

<MudStack Spacing="4">
    <MudText Typo="@Typo.h4" GutterBottom>Info</MudText>
    
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">Connection</MudText>
        </MudCardHeader>

        <MudCardContent>
            @if (_softwareInfo == null)
            {
                <MudProgressLinear Indeterminate />
            }
            else
            {
                <MudField Label="Subscribed">@(_connectionInfo.Subscribed ? "Yes" : "No")</MudField>

                @if (_connectionInfo.P2PInfo != null ||
                     _connectionInfo.WifiInfo != null ||
                     _connectionInfo.WiredInfo != null)
                {
	                <br />
                }

	            <MudText Typo="Typo.h6">MAC Addresses</MudText>

                @if (_connectionInfo.P2PInfo != null)
                {
                    <MudField Label="P2P">@_connectionInfo.P2PInfo.MacAddress</MudField>
                }

                @if (_connectionInfo.WifiInfo != null)
                {
                    <MudField Label="WiFi">@_connectionInfo.WifiInfo.MacAddress</MudField>
                }

                @if (_connectionInfo.WiredInfo != null)
                {
                    <MudField Label="Wired">@_connectionInfo.WiredInfo.MacAddress</MudField>
                }
            }
        </MudCardContent>
    </MudCard>

    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">System</MudText>
        </MudCardHeader>

        <MudCardContent>
            @if (_softwareInfo == null)
            {
                <MudProgressLinear Indeterminate />
            }
            else
            {
                <MudText Typo="Typo.h6">Features</MudText>
	            <MudField Label="3D">@(_systemInfo.Features._3D ? "Yes" : "No")</MudField>
	            <MudField Label="DVR">@(_systemInfo.Features.DVR ? "Yes" : "No")</MudField>

	            <br/>

                <MudField Label="Receiver Type">@_systemInfo.ReceiverType</MudField>

                <MudField Label="Model">@_systemInfo.ModelName</MudField>

                <MudField Label="Program Mode">@_systemInfo.ProgramMode</MudField>
            }
        </MudCardContent>
    </MudCard>

    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">Software</MudText>
        </MudCardHeader>

        <MudCardContent>
            @if (_softwareInfo == null)
            {
                <MudProgressLinear Indeterminate />
            }
            else
            {
                <MudField Label="Product">@_softwareInfo.ProductName</MudField>

                <MudField Label="Model">@_softwareInfo.ModelName</MudField>

                <MudField Label="Software Type">@_softwareInfo.SoftwareType</MudField>

                <MudField Label="Major Version">@_softwareInfo.MajorVersion</MudField>

                <MudField Label="Minor Version">@_softwareInfo.MinorVersion</MudField>

                <MudField Label="Country">@_softwareInfo.Country</MudField>

                <MudField Label="Country Group">@_softwareInfo.CountryGroup</MudField>

                <MudField Label="Device ID">@_softwareInfo.DeviceId</MudField>

                <MudField Label="Auth Flag">@_softwareInfo.AuthFlag</MudField>

                <MudField Label="Ignore Disable">@_softwareInfo.IgnoreDisable</MudField>

                <MudField Label="Eco Info">@_softwareInfo.EcoInfo</MudField>

                <MudField Label="Config Key">@_softwareInfo.ConfigKey</MudField>

                <MudField Label="Language">@_softwareInfo.Language.Name</MudField>
            }
        </MudCardContent>
    </MudCard>
</MudStack>

@code {
    private SystemInformation _systemInfo;
    private SoftwareInformation _softwareInfo;
    private ConnectionInformation _connectionInfo;

    protected override async Task OnInitializedAsync()
    {
        _systemInfo = await Controller.Client.Info.GetSystemInfo();
        _softwareInfo = await Controller.Client.Info.GetSoftwareInfo();
        _connectionInfo = await Controller.Client.Info.GetConnectionInfo();
    }
}
