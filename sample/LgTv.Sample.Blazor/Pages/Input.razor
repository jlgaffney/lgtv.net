@page "/inputs/{Id}"
@inject ILgTvClientController Controller

@if (_item == null)
{
    <PageTitle>Loading…</PageTitle>
    <MudProgressLinear Indeterminate />
    return;
}

<PageTitle>@_item.Label</PageTitle>

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h5">@_item.Label</MudText>
    </MudCardHeader>

    <MudCardContent>
        <MudStack Row AlignItems="AlignItems.Center">
            <MudImage Alt="@($"{_item.Label} Icon")" Src="@_item.Icon" Width="80" Height="80" Elevation="3" Style="background: #D6DBDB" />

            <MudText Typo="Typo.h6">@(_item.Connected ? "Connected" : "Not connected")</MudText>
        </MudStack>
    </MudCardContent>

    <MudCardActions>
        <MudButton OnClick="() => Controller.Client.Inputs.SetInput(_item.Id)">Select</MudButton>
    </MudCardActions>
</MudCard>

@code {
    private LgTv.Clients.Inputs.Input _item;

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _item = await Controller.Client.Inputs.GetInput(Id);
    }
}
